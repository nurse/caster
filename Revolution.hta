<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja" lang="ja"><head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta http-equiv="Content-Script-Type" content="text/javascript" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="MSThemeCompatible" content="Yes" />
<!--

	AjaxChatClient

Copyright (c)2005,2006,2007 Nerry Kitazato, All rights reserved.

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:

- Redistributions of source code must retain the above copyright notice, this
  list of conditions and the following disclaimer. 
- Redistributions in binary form must reproduce the above copyright notice,
  this list of conditions and the following disclaimer in the documentation
  and/or other materials provided with the distribution. 

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.

-->
<title>AjaxChatClient を起動しています・・・</title>
<style type="text/css">
.hidden{ display: none; }
#painPoolContainer .active { display: block; }
#painPoolContainer .inactive { display: none; }
BODY { overflow-y: hidden; }
form{ margin:0; }

.chatLog {
	height: 250px;
	overflow-y: auto;
}
#globalLog {
	height: 100px;
	overflow-y: scroll;
}
#globalLog p {
	margin: 0;
}

</style>
<script type="text/javascript" src="./lib/punycode.js"></script>
<script type="text/javascript" src="./lib/sha1.js"></script>
<script type="text/javascript" src="./lib/maple-core.js"></script>
<script type="text/javascript" src="./lib/HTML.js"></script>
<script type="text/javascript">

	var	app		= {
		"name":"Revolution/1.04 (alpha5)",
		"core":"AjaxChatClient/1.04.34.20070818",
		"active":true,
		"selected":0,
		"timerSetActiveBody":null,
		"tab":[],
		"addedTab":0,
		"defaultReload":20,
		"outline":[],
		"history":{
			"max":50,
			"pos":0,
			"queue":[""]
		},
		"window":{
			"width":430,"height":592
		}
	};
	app.ua		= app.name+' '+app.core;
	app.popup	= window.createPopup();
	app.regexp_autolink	= new RegExp("(^|[^>\\w])((ftp|http|https)://[^\"#&'/\\s]+(|/[\x21\x23-\x26\x28-\x7e]*))(?=($|[^\x21\x23-\x26\x28-\\x7e]))","g");

	app.pathUserProfilePrefix	= "./etc/";

	app.pathProfile	= app.pathUserProfilePrefix+"profile.xml";
	app.pathOPML	= app.pathUserProfilePrefix+"setting.opml";
	app.pathDefaultOPML	= "./lib/default-setting.opml";
	var	domProfile	= new ActiveXObject("Microsoft.XMLDOM");
	if(!domProfile.load(app.pathProfile)){
		domProfile.loadXML("<profile>\n<application-settings />\n</profile>");
	}
	var	domProfileDE = domProfile.documentElement;
	var	domProfileAPS = domProfileDE.selectSingleNode("application-settings");

	if(domProfileAPS.getAttribute("W")!=null){
		app.window.width	= atoi(domProfileAPS.getAttribute("W"));
		app.window.height	= atoi(domProfileAPS.getAttribute("H"));
	}
	if(domProfileAPS.getAttribute("X")!=null){
		app.window.x		= atoi(domProfileAPS.getAttribute("X"));
		app.window.y		= atoi(domProfileAPS.getAttribute("Y"));
	}else{
		app.window.x		= screen.width-app.window.width;
		app.window.y		= screen.height-app.window.height;
	}

	window.moveTo(app.window.x, app.window.y);
	window.resizeTo(app.window.width, app.window.height);

	try{
		app.wsh	= new ActiveXObject("WScript.Shell");
	}catch(e){
		app.wsh	= null;
	}

function save_profile(){
	var x=app.domConfigForm.selectNodes("//*[@id]");
	for(var i=0;i<x.length;i++){
		var q=x.item(i).getAttribute("id");
		switch(x.item(i).nodeName){
		case "input":
			switch(x.item(i).getAttribute("type")){
			case "checkbox":
			case "radio":
				domProfileAPS.setAttribute(q,document.getElementById(q).checked?"true":"false");
				break;
			default:
				domProfileAPS.setAttribute(q,document.getElementById(q).value);
			}
			break;
		case "select":
			domProfileAPS.setAttribute(q,document.getElementById(q).value);
			break;
		}
	}
	domProfile.save(app.pathProfile);
}

function applyStyleSheets(){
	var x=document.getElementById("idTheme");
	var tn=x.value;
	var a=document.styleSheets;
	for(var i=1;i<a.length;i++){
		if(a[i].title==tn){
			a[i].disabled=false;
		}else{
			a[i].disabled=true;
		}
	}
}

function applyTopmost(){
	oAccHelper.topmost=document.getElementById("idWindowTopmost").checked;
}

function applyOpacity(){
	onActivate(1);
}

function onActivate(active){
	try{
		if(app.active=active){
			var x=document.getElementById("idWindowOpacity");
		}else{
			var x=document.getElementById("idWindowOpacityInactive");
		}
		var v=parseInt(x.value);
		if(!v){
			v=256;
		}else if(v<64){
			v=64;
			x.value=v;
		}
		oAccHelper.opacity=v;
	}catch(e){}
}

	window.onload	= function(){

		//	ウィンドウ生成前のリサイズ失敗したときのため
		try{	window.moveTo(app.window.x, app.window.y);	}catch(e){}
		try{	window.resizeTo(app.window.width, app.window.height);	}catch(e){}

		try{
			oAccHelper.init(document.title);
		}catch(e){
			msgbox("AccHelper コントロールの初期化に失敗しました。\n\nAccHelper コントロールが正しくインストールされているか確認してください。");
			window.close();
			return;
		}
		oAccHelper.onActivate	= onActivate;

		//setTimeout("(oAccHelper.getVersion())", 1000);

		app.domConfigForm	= new ActiveXObject("Microsoft.XMLDOM");
		app.domConfigForm.load("./lib/template-config.xml");

		var x=app.domConfigForm.selectSingleNode("//*[@id='idTheme']");
		var	fso=new ActiveXObject("Scripting.FileSystemObject");
		var e = new Enumerator(fso.GetFolder("./lib/themes").SubFolders);
		for(e.moveFirst();!e.atEnd();e.moveNext()){
			var file=e.item();
			if(!file.Name.match(/^\./)){
				var option=x.appendChild(app.domConfigForm.createElement("option"));
				option.setAttribute("value",file.Name);
				if(file.Name.match(/Terra/i)){
					option.setAttribute("selected","selected");
				}
				option.appendChild(app.domConfigForm.createTextNode(file.Name));
			}
		}

		document.getElementById("id_config_html_here").outerHTML=app.domConfigForm.documentElement.xml;

		var x=app.domConfigForm.selectNodes("//*[@id]");
		for(var i=0;i<x.length;i++){
			var q=x.item(i).getAttribute("id");
			var y=domProfileAPS.getAttribute(q);
			if(domProfileAPS.selectSingleNode("@"+q)){
				switch(x.item(i).nodeName){
				case "input":
					switch(x.item(i).getAttribute("type")){
					case "checkbox":
					case "radio":
						document.getElementById(q).checked=eval(y);
						break;
					default:
						document.getElementById(q).value=y;
					}
					break;
				case "select":
					document.getElementById(q).value=y;
					break;
				}
			}
		}

		var x=document.getElementById("idTheme");
		var a=x.options;
		for(var i=0;i<a.length;i++){
			var tn=a[i].value;
			var css=document.createStyleSheet("./lib/themes/"+tn+"/"+tn+".css");
			css.title=a[i].value;
			css.disabled=false;
		}
		applyStyleSheets();
		applyOpacity();
		applyTopmost();

		//	setting.opml/setting.xml のインポート
		var	domConfig = new ActiveXObject("Microsoft.XMLDOM");
		var pathOldConfig = app.pathUserProfilePrefix+"setting.xml";
		var	domOPML	= new ActiveXObject("Microsoft.XMLDOM");
		if(!domOPML.load(app.pathOPML)){
			if(domConfig.load(pathOldConfig)){
				domOPML.loadXML("<opml xmlns:acc=\"http://wahah.jp/AccOPML/\" />");
				var opmlBody=domOPML.createElement("body");
				domOPML.documentElement.appendChild(opmlBody);
				var x=domConfig.documentElement.selectNodes("chat-room");
				for(var i=0;i<x.length;i++){
					var l=x.item(i);
					if(!(""+l.getAttribute("base-uri")).match(/update.wahah.jp/)){
						var y=domOPML.createElement("outline");
						y.setAttribute("type","cast");
						y.setAttribute("acc:system",l.getAttribute("system"));
						y.setAttribute("text",l.getAttribute("title"));
						y.setAttribute("xmlUrl",l.getAttribute("base-uri"));
						y.setAttribute("htmlUrl",l.getAttribute("org-uri"));
						opmlBody.appendChild(y);
					}
				}
				saveOutline();
			}else{
				domOPML.load(app.pathDefaultOPML);
			}
		}
		for(var i=0;i<100;i++){
			app.tab[i] = {};
		}
		app.openedTabs	= 2;
		app.tab[99]={ "system":true, "opened":true, "created":true, "discardable":false, "title":"設定", "idBody":"id_add_feed_url", "options":{"disallowPost":true} };
		select_chat(99);
		add_tab({ "acc:startup":"true", "type":"rss", "text":"ホーム", "htmlUrl":"about:", "xmlUrl":"http://wahah.jp/rpc/acc/welcome.cgi" });
		var x=domOPML.documentElement.selectNodes("body/outline");
		for(var i=0;i<x.length;i++){
			var o={};
			var y=x.item(i).attributes;
			for(var j=0;j<y.length;j++){
				o[y.item(j).nodeName]=y.item(j).nodeValue;
			}
			app.outline.push(o);
			add_tab(o);
		}
		open_startup_tabs(0);

		app.bootOk = true;
	}

	window.onbeforeunload	= function(){
		if(!app.bootOk) return;

		try{
			if(document.getElementById("idRememberWindowPosition").checked){
				var clientX		= window.screenLeft;
				var clientY		= window.screenTop;
				var clientW		= document.body.offsetWidth;
				var clientH		= document.body.offsetHeight;

				var	resizeW		= 240;
				var	resizeH		= 120;

				window.moveTo(0,0);
				window.resizeTo(resizeW,resizeH);

				clientMarginW	= resizeW-document.body.offsetWidth;
				clientMarginH	= resizeH-document.body.offsetHeight;

				domProfileAPS.setAttribute("X",clientX-window.screenLeft);
				domProfileAPS.setAttribute("Y",clientY-window.screenTop);
				//domProfileAPS.setAttribute("W",clientW+clientMarginW);
				//domProfileAPS.setAttribute("H",clientH+clientMarginH);
			}
		}catch(e){}
		save_profile();
	}

	window.onerror = function(message,url,line){
		msgbox(message+"("+url+" 行: "+line+")");
		return true;
	}

function saveOutline(){
	var	domOPML	= new ActiveXObject("Microsoft.XMLDOM");
	domOPML.loadXML("<opml />");
	domOPML.documentElement.setAttribute("version","1.0");
	domOPML.documentElement.setAttribute("xmlns:acc","http://wahah.jp/AccOPML/");
	var x=domOPML.createElement("head");
	var y=domOPML.createElement("title");
	y.appendChild(domOPML.createTextNode(app.name));
	x.appendChild(y);
	domOPML.documentElement.appendChild(x);
	var opmlBody=domOPML.createElement("body");
	domOPML.documentElement.appendChild(opmlBody);
	for(var i=0;i<app.outline.length;i++){
		var x=app.outline[i];
		delete x.title;
		if(x.deleted){
		}else{
			var	q=domOPML.createElement("outline");
			for(var y in x){
				q.setAttribute(y,x[y]);
			}
			opmlBody.appendChild(domOPML.createTextNode("\n"));
			opmlBody.appendChild(q);
		}
	}
	domOPML.save(app.pathOPML);
}

function open_startup_tabs(index){
	if(app.tab.length<=index) return;
	if(app.tab[index].startup){
		select_chat(index);
		setTimeout("open_startup_tabs("+(index+1)+")",300);
	}else{
		open_startup_tabs(index+1);
	}
}

function on_context(obj,e,tab){
	var	lefter	= window.event.offsetY + obj.offsetTop;
	var	topper	= window.event.offsetX + obj.offsetLeft;
	app.popup.document.tab=tab;
	app.popup.document.createStyleSheet().cssText = '@import:url("lib/themes/popup.css");';
	app.popup.document.body.innerHTML = document.getElementById("srcMenuTab").innerHTML;
	app.popup.document.body.oncontextmenu = function(){ return false;};
	app.popup.document.body.onmouseup=function(){setTimeout("app.popup.hide()",100)};
	app.popup.show(topper, lefter, 128, 80, document.body);
}

function hook_keys(e){
	var keyCode;
	if(document.all){
		keyCode = e.keyCode;
	}else if(document.getElementById){
		keyCode = e.which;
	}else return true;

	//	Ctrl | Alt + Num
	if(e.altKey || e.ctrlKey){
		if(keyCode>=0x31&&keyCode<=0x39){ // Alt + 1-9 select tab
			select_chat(keyCode-0x30);
			return false;
		}else if(keyCode==0x30){ // ALt + 0 select tab
//			select_chat(99);
			return false;
		}
	}

	//	Control + x
	if(!e.altKey && e.ctrlKey){
		switch(keyCode){
//			case 0x51: // Ctrl+Q: quit
//				window.close();
//				return false;
			case 0x52: // Ctrl+R: reload tab
				wrapper_reload()
				return false;
			case 0x57: // Ctrl+W: close tab
				close_tab(app.selected);
				return false;
		}
	}

	// Ctrl[+Shift]+Tab: change tab
	if(keyCode==9 && !e.altKey && e.ctrlKey){
		if(event.shiftKey){
			prev_active_chat();
		}else{
			next_active_chat();
		}
		return false;
	}

	return true;
}

function hook_keys_body(e){
	var keyCode;
	if(document.all){
		keyCode = e.keyCode;
	}else if(document.getElementById){
		keyCode = e.which;
	}else return true;

	//	history
	if(keyCode==38){ // UAllow
		var x=document.getElementById(app.tab[app.selected].idBody);
		if(!app.history.pos){
			app.history.queue[0]=x.value;
		}
		if(app.history.pos<app.history.queue.length-1){
			app.history.pos++;
			x.value=app.history.queue[app.history.pos];
		}
		return false;
	}else if(keyCode==40){ // DAllow
		var x=document.getElementById(app.tab[app.selected].idBody);
		if(app.history.pos>0){
			app.history.pos--;
			x.value=app.history.queue[app.history.pos];
		}
		return false;
	}
	return true;
}

function next_active_chat(){
	var tab=app.selected;
	do{
		tab++;
		if(tab>=app.tab.length) tab=0;
	}while(!app.tab[tab].opened);
	return select_chat(tab);
}

function prev_active_chat(){
	var tab=app.selected;
	do{
		tab--;
		if(tab<0) tab=app.tab.length-1;
	}while(!app.tab[tab].opened);
	return select_chat(tab);
}

function select_chat(tab){
	if(app.tab[app.selected].opened && app.selected == tab) return true;

	if(app.tab[app.selected].opened){
		try{ document.getElementById("tabButton"+app.selected).className="inactive"; }catch(e){}
		try{ document.getElementById("tabContents"+app.selected).className="inactive"; }catch(e){}
		wrapper_autosave_settings();
		window.scroll();
	}

	app.selected		= tab;
	try{ document.getElementById("tabButton"+tab).className="active"; }catch(e){}
	try{ document.getElementById("tabContents"+tab).className="active"; }catch(e){}
	document.title		= (app.tab[tab].title.length?app.tab[tab].title+" - ":"")+app.name;

	if(app.tab[tab].created){
		if(app.tab[tab].opened){
			;
		}else{
			app.tab[tab].opened=true;
			app.openedTabs++;
			wrapper_reload_tab(tab);
		}
	}else{
		if(!app.tab[tab].nodeProfile){
			app.tab[tab].nodeProfile	= domProfileDE.selectSingleNode("chat-room[@baseuri='"+app.tab[tab].baseUri+"']/form");
			if(!app.tab[tab].nodeProfile){
				domProfileDE.appendChild(domProfile.createTextNode("\n"));
				var x=domProfile.createElement("chat-room");
				x.setAttribute("baseuri",app.tab[tab].baseUri);
				var y=domProfileDE.appendChild(x)
				app.tab[tab].nodeProfile=y.appendChild(domProfile.createElement("form"));
			}
		}

		var x=app.tab[tab].domSetting.documentElement.selectNodes("options/item");
		for(var i=0;i<x.length;i++){
			l=x.item(i);
			app.tab[tab].options[l.getAttribute("type")]=l.getAttribute("value");
		}

		if(!atoi(app.tab[tab].options.reload)){
			app.tab[tab].options.reload = app.defaultReload
		}

		var	dom		= new ActiveXObject("Microsoft.XMLDOM");
		var pain	= dom.createDocumentFragment();
		var form	= pain.appendChild(dom.createElement("form"));
		form.setAttribute("onsubmit","wrapper_talk(); return false;");
		form.setAttribute("onreset","return false;");
		var	div		= pain.appendChild(dom.createElement("div"));
		if(!app.tab[tab].options.disallowPost){
			var	input	= div.appendChild(dom.createElement("input"));
			input.setAttribute("id","submitButton_"+tab);
			input.setAttribute("class","submitButton");
			input.setAttribute("onmouseover","this.className='submitButtonHover'; return false;");
			input.setAttribute("onmouseout","this.className='submitButton'; return false;");
			input.setAttribute("type","submit");
			input.setAttribute("value","送信");
			input.setAttribute("accesskey","s");
		}
		if(app.tab[tab].domSetting.documentElement.selectSingleNode("form/fieldset[@type='option']")){
			div.appendChild(dom.createTextNode(" | "));
			var	input	= div.appendChild(dom.createElement("a"));
			input.setAttribute("href","#");
			input.setAttribute("onclick","wrapper_flip_option(); return false;");
			input.setAttribute("accesskey","o");
			input.appendChild(dom.createTextNode("オプション"));
		}
		if(app.tab[tab].siteName.length){
			div.appendChild(dom.createTextNode(" | "));
			var	anchor	= div.appendChild(dom.createElement("a"));
			anchor.setAttribute("href",app.tab[tab].siteUri);
			anchor.setAttribute("title",app.tab[tab].siteName+"\n"+app.tab[tab].siteUri);
			anchor.setAttribute("onclick","nav(this.href); return false;");
			anchor.appendChild(dom.createTextNode(app.tab[tab].siteName));
		}
		div.appendChild(dom.createTextNode(" | "));
		var	anchor	= div.appendChild(dom.createElement("a"));
		anchor.setAttribute("href",app.tab[tab].orgUri);
		anchor.setAttribute("title",app.tab[tab].title+"\n"+app.tab[tab].orgUri);
		anchor.setAttribute("onclick","nav(this.href); return false;");
		anchor.appendChild(dom.createTextNode("ブラウザで開く"));
		div.appendChild(dom.createTextNode(" | "));
		var	span		= pain.appendChild(dom.createElement("span"));
		span.setAttribute("id","id_span_alternative_url"+tab);
		span.appendChild(dom.createTextNode(" "));
		div.appendChild(span);

		if(document.getElementById("idEnableDebug").checked){
			var	anchor	= div.appendChild(dom.createElement("a"));
			anchor.setAttribute("href","#");
			anchor.setAttribute("onclick","msgbox(JSON.save(app.tab["+tab+"]));");
			anchor.appendChild(dom.createTextNode("options"));
			div.appendChild(dom.createTextNode(" | "));
			var	anchor	= div.appendChild(dom.createElement("a"));
			anchor.setAttribute("href","#");
			anchor.setAttribute("onclick","msgbox(wrapper_get_query(true, "+tab+"));");
			anchor.appendChild(dom.createTextNode("queries"));
			div.appendChild(dom.createTextNode(" | "));
		}

		var	div		= pain.appendChild(dom.createElement("div"));
		wrapper_parse_template(tab,dom,div,app.tab[tab].domSetting.documentElement.selectNodes("form/fieldset[@type='main']"));
		var	div		= pain.appendChild(dom.createElement("fieldset"));
		div.setAttribute("id","chatFrameOption."+tab);
		div.setAttribute("class","hidden");
		div.appendChild(dom.createElement("legend")).appendChild(dom.createTextNode("Option"));
		wrapper_parse_template(tab,dom,div,app.tab[tab].domSetting.documentElement.selectNodes("form/fieldset[@type='option']"));

		var div		= pain.appendChild(dom.createElement("div"));
		div.setAttribute("id","chatMember."+tab);
		div.setAttribute("class","logMember");
		div.appendChild(dom.createTextNode(" "));
		var div		= pain.appendChild(dom.createElement("div"));
		div.setAttribute("id","chatLog."+tab);
		div.setAttribute("class","chatLog");
		div.appendChild(dom.createTextNode(" "));
		document.getElementById("tabContents"+tab).innerHTML = pain.xml;
		app.tab[tab].created = true;

		app.tab[tab].opened = true;
		app.openedTabs++;

		wrapper_reload_tab(tab);
	}

	setActiveBody();
	if(app.timerSetActiveBody){
		clearTimeout(app.timerSetActiveBody);
		app.timerSetActiveBody=null;
	}
	app.timerSetActiveBody=setTimeout("setActiveBody()",300);

	return true;
}


function setActiveBody(){
	app.timerSetActiveBody=null;
	if(app.tab[app.selected].opened){
		try{
			document.getElementById(app.tab[app.selected].idBody).focus();
		}catch(e){}
	}
}
function setActiveBodyTab(tab){
	document.getElementById("submitButton_"+tab).disabled=false;
	setActiveBody();
}

function delete_tab(tab){
	if(!app.tab[tab].discardable) return;
	if(msgbox_yn("タブ「"+app.tab[tab].title+"」を削除しますか？")){
		close_tab(tab);
		var x;
		x=document.getElementById("tabButton"+tab);
		if(x) x.parentNode.removeChild(x);
		x=document.getElementById("tabContents"+tab);
		if(x) x.parentNode.removeChild(x);
		for(var i=0;i<app.outline.length;i++){
			if(app.outline[i].xmlUrl==app.tab[tab].baseUri){
				app.outline[i].deleted=true;
			}
		}
		saveOutline();
		if(msgbox_yn("タブの削除には再起動が必要です。\n\n今すぐ再起動しますか？")){
			location.reload();
		}
	}
}

function close_tab(tab){
	if(!app.tab[tab].discardable) return;
	if(tab==app.selected) prev_active_chat();
	app.tab[tab].opened = false;
	app.openedTabs--;
	clear_reload_tab(tab);
	delete app.tab[tab].implicit_reload_uri;
	delete app.tab[tab].http_last_modified;
	delete app.tab[tab].lastModified;
	delete app.tab[tab].serial;
	delete app.tab[tab].cached;
	document.getElementById("tabButton"+tab).className="disabled";
	document.getElementById("tabContents"+tab).className="inactive";
}

function wrapper_parse_template(tab,dom,f,templates){
	for(var i=0;i<templates.length;i++){
		var	template	= templates.item(i).childNodes;
		for(var j=0;j<template.length;j++){
			var	e=template.item(j);
			switch(""+e.nodeName){
			case "input":
				switch(e.getAttribute("type")){
				case "select":
				case "fixed":
					break;
				default:
					f.appendChild(dom.createTextNode(" "));
					var	o=f.appendChild(dom.createElement("label"));
					o.setAttribute("for",e.getAttribute("name")+"."+tab);
					o.setAttribute("title",getElementText(e));
					o.setAttribute("style","white-space: nowrap;");
					var	s=e.getAttribute("label");
					if(s&&s.length){
						o.appendChild(dom.createTextNode(s+":"));
					}
					var	oi=o.appendChild(dom.createElement("input"));
					oi.setAttribute("id",e.getAttribute("name")+"."+tab);
					var s=e.getAttribute("value");
					if(typeof s=="string"){
						oi.setAttribute("value",s);
					}
					oi.setAttribute("onblur","wrapper_autosave_settings()");
					switch(""+e.getAttribute("type")){
					case "hidden":
					case "fixed":
						oi.setAttribute("class","hidden");
						break;
					case "string":
						oi.setAttribute("class","i_text");
						break;
					case "integer":
						oi.setAttribute("class","i_text");
						oi.setAttribute("size","4");
						break;
					}
					switch(""+e.getAttribute("perceivedType")){
					case "line":
						oi.setAttribute("onchange","app.tab["+tab+"].cached=false;");
						break;
					case "body":
						oi.setAttribute("accesskey","b");
						oi.setAttribute("onkeydown","hook_keys_body(event)");
						app.tab[tab].idBody=""+e.getAttribute("name")+"."+tab;
						break;
					case "icon":
						app.tab[tab].idIcon=""+e.getAttribute("name")+"."+tab;
						break;
					case "reload":
						app.tab[tab].idReload=""+e.getAttribute("name")+"."+tab;
						break;
					}
					var	size=parseInt(e.getAttribute("size"));
					if(size){ oi.setAttribute("size",size); }
					var	s	= defstr(app.tab[app.selected].nodeProfile.getAttribute(e.getAttribute("name")));
					if(e.getAttribute("saving")=="yes" && s.length){
						oi.setAttribute("value",s);
					}
				}
				break;
			case "select":
				f.appendChild(dom.createTextNode(" "));
				var	o=f.appendChild(dom.createElement("label"));
				o.setAttribute("for",e.getAttribute("name")+"."+tab);
				o.setAttribute("title",getElementText(e));
				o.setAttribute("style","white-space: nowrap;");
				var	s=e.getAttribute("label");
				if(s.length){
					o.appendChild(dom.createTextNode(s+":"));
				}
				var os=o.appendChild(dom.createElement("select"));
				os.setAttribute("id",e.getAttribute("name")+"."+tab);
				var	s	= defstr(app.tab[app.selected].nodeProfile.getAttribute(e.getAttribute("name")));
				var oq=e.selectNodes("optgroup|option");
				for(var k=0;k<oq.length;k++){
					var oqo=oq.item(k);
					switch(oqo.nodeName){
					case "option":
						var	oo=os.appendChild(dom.createElement("option"));
						oo.setAttribute("value",oqo.getAttribute("value"));
						if( s==oqo.getAttribute("value") && e.getAttribute("saving")=="yes" ){
							oo.setAttribute("selected","selected");
						}
						oo.appendChild(dom.createTextNode(oqo.text));
						break;
					case "optgroup":
						// NOT IMPLEMENTED
						break;
					}
				}
				break;
			case "line-break":
				f.appendChild(dom.createElement("br"));
				break;
			case "text":
				var div=f.appendChild(dom.createElement("div"));
				div.appendChild(e);
				break;
			}
		}
	}
}

function defstr(s){
	var	q=""+s;
	if(q=="null"||q=="undefined") return "";
	return q;
}

function wrapper_autosave_settings(){
	wrapper_autosave_settings_tab(app.selected);
}

function wrapper_autosave_settings_tab(tab){
	if(!app.tab[tab].opened
|| app.tab[tab].options.disallowPost
) return;
	var	template=app.tab[tab].domSetting.documentElement.selectNodes("form/*/*[@saving='yes']");
	var	dirty=false;
	for(var i=0;i<template.length;i++){
		var	e=template.item(i);
		var	s=document.getElementById(e.getAttribute("name")+"."+tab).value;
		try{
			if(app.tab[tab].nodeProfile.getAttribute(e.getAttribute("name"))!=s){
				app.tab[tab].nodeProfile.setAttribute(e.getAttribute("name"),s);
				dirty=true;
			}
		}catch(e){}
	}
	if(dirty){
		save_profile();
	}
}

function wrapper_reload(){
	wrapper_reload_tab(app.selected);
}
function wrapper_talk(){
	var tab=parseInt(app.selected);
	wrapper_send(true,tab);
	if(app.tab[tab].idBody){
		app.history.pos=0;
		var x=document.getElementById(app.tab[tab].idBody);
		if(x.value.length && app.history.queue[1]!=x.value){
			app.history.queue[0]=x.value;
			app.history.queue.unshift("");
		}
		if(app.history.queue.length>app.history.max){
			app.history.queue.pop();
		}
		x.value="";
		try{ x.focus(); }catch(e){}
	}
}
function wrapper_reload_tab(tab){
	if(app.tab[tab].system) return;
	app.tab[tab].cached=0;
	if(tab==app.selected){
		document.getElementById("chatLog."+tab).innerHTML="<strong>Loading...</strong>";
	}
	wrapper_send(false,tab);
}

function clear_reload_tab(tab){
	if(app.tab[tab].timer){
		clearTimeout(app.tab[tab].timer);
		app.tab[tab].timer=null;
	}
}

function wrapper_reload_implicit(tab){
	clear_reload_tab(tab);
	wrapper_request_get(app.tab[tab].implicit_reload_uri,tab);
}

function wrapper_triger_reload_implicit(tab){
	clear_reload_tab(tab);
	var reload = atoi(app.tab[tab].options.reload);
	if(reload>1){
		app.tab[tab].timer = setTimeout("wrapper_reload_implicit("+tab+")",reload*1000);
	}
}

function wrapper_get_query(isPost,tab){
	var	query	= [];
	var	template= app.tab[tab].domSetting.documentElement.selectNodes("form/fieldset/*[@"+(isPost?"post":"get")+"='yes']");
	for(var i=0;i<template.length;i++){
		var	e=template.item(i);
		switch(""+e.nodeName){
		case "input":
		case "select":
			if(e.getAttribute("type")=="fixed"){
				query.push(e.getAttribute("name")+"="+encodeURIComponent(e.getAttribute("value")));
			}else{
				query.push(e.getAttribute("name")+"="+
					encodeURIComponent(document.getElementById(e.getAttribute("name")+"."+tab).value)
				);
			}
		}
	}
	return query.join("&");
}

function wrapper_send(isPost,tab){
	clear_reload_tab(tab);
	var	baseUri	= app.tab[tab].baseUri;
	var	query	= wrapper_get_query(isPost,tab);
	var	baseUri0 = baseUri;

	if(baseUri.match(/\?/)){
		baseUri0 = baseUri.replace(/\?.*$/,"");
	}

	if(isPost){
		app.tab[tab].implicit_reload_uri=baseUri0+'?'+wrapper_get_query(false,tab)
		wrapper_request_post(baseUri,query,tab);
	}else{
		if(query.length>0){
			app.tab[tab].implicit_reload_uri=baseUri0+'?'+query;
		}else{
			app.tab[tab].implicit_reload_uri=baseUri;
		}
		wrapper_request_get(app.tab[app.selected].implicit_reload_uri,tab);
	}
}

function wrapper_request_ajax(isPost,uri,query,tab){
	if(app.tab[tab].http_timeout) wrapper_request_ajax_timeout(tab);
	var req=null;
	try{
		req = new ActiveXObject("MSXML2.XMLHTTP");
	}catch(e){
		req = new ActiveXObject("Microsoft.XMLHTTP");
	}
	req.onreadystatechange = function(){
		if(req.readyState == 4){
			wrapper_request_result(isPost,tab,req);
			req=null;
		}
	}
	if(isPost){
		req.open("POST", uri, true);
		req.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
		req.setRequestHeader("User-Agent",app.ua);
		req.setRequestHeader("Referer","null");
		req.send(query);
	}else{
/*
		if(uri.match(/\?/)){
			req.open("GET",uri+"&NOCACHE="+parseInt(new Date().valueOf()/1000),true);
		}else{
			req.open("GET",uri+"?NOCACHE="+parseInt(new Date().valueOf()/1000),true);
		}
*/
		req.open("GET", uri, true);
		if(app.tab[tab].lastModified){
			req.setRequestHeader("If-Modified-Since",app.tab[tab].lastModified.toString());
		}else{
			req.setRequestHeader("If-Modified-Since","Thu, 01 Jun 1970 00:00:00 GMT");
		}
		req.setRequestHeader("User-Agent",app.ua);
		req.setRequestHeader("Referer","null");
		req.send();
	}
	app.tab[tab].req = req;
	app.tab[tab].http_timeout = setTimeout("wrapper_request_ajax_timeout("+tab+")",10000);
}

function wrapper_request_ajax_abort(tab){
	if(!app.tab[tab].http_timeout) return false;
	if (app.tab[tab].req.readyState == 0 || app.tab[tab].req.readyState == 4) return false;
	app.tab[tab].req.abort();
	clearTimeout(app.tab[tab].http_timeout);
	app.tab[tab].http_timeout = null;
	return true
}

function wrapper_request_post(uri,query,tab){
	if(!app.tab[tab].opened) return;
	document.getElementById("tabButton"+tab).innerText = "Sending...";
	wrapper_request_ajax(true,uri,query,tab);
}

function wrapper_request_get(uri,tab){
	if(!app.tab[tab].opened) return;
	document.getElementById("tabButton"+tab).innerText = "Loading...";
	wrapper_request_ajax(false,uri,null,tab);
}


function wrapper_request_result(isPost,tab,req){

try{

	if(!app.tab[tab].opened){
		return false;
	}
	clear_reload_tab(tab);

	var	domChat	= req.responseXML;

	wrapper_triger_reload_implicit(tab);
	if(req.status==200&&domChat.documentElement){
		//wrapper_append_global_log_string( new Date().strftime('%H:%M:%S')+": parse "+tab);

		var	now	= parseInt(new Date().valueOf()/1000);

		app.iconcache	= document.getElementById("idIconCachePath").value;
		app.icon_height	= atoi(document.getElementById("idResizeIcon").value);
		var icon_enable	= document.getElementById("idEnableIcon").checked?true:false;
		app.allow_tag_list	=	new RegExp("^("+document.getElementById("idSafeTagList").value.split(/\s+/).join("|")+")$","i");

		//domChat.documentElement.addNamespace("terra","http://wahah.jp/Terra/CastExtention");

		//	モジュール認識
		var module="cast";
		switch(""+domChat.documentElement.getAttribute("xmlns")){
		case "http://purl.org/rss/1.0/": // RSS 1.0
			module="rss";
			break;

		case "http://www.w3.org/2005/Atom":	//	atom
		case "http://purl.org/atom/ns#":	// Atom 0.3
			module="atom";
			break;

		default:
			switch(""+domChat.documentElement.nodeName){
			case "rss": // RSS 2.0
				module="rss";
				break;
			}
		}

		//	オプション
		app.tab[tab].o_options={};
		var e_options=domChat.documentElement.selectNodes("terra:option");
		for(var i=0;i<e_options.length;i++){
			var e_option=e_options.item(i);
			app.tab[tab].o_options[e_option.getAttribute("name")]=""+e_option.getAttribute("value");
		}

		//	リロード調整
		var nr=parseInt(app.tab[tab].o_options.nextReload);
		if(nr){
			var rrmin=parseInt(document.getElementById('idReloadRateMin').value);
			var rrmax=parseInt(document.getElementById('idReloadRateMax').value);
			if(nr<rrmin){
				nr=rrmin;
			}else if(nr>rrmax){
				nr=rrmax;
			}
			app.tab[tab].options.reload = nr;
		}
		var x=document.getElementById(app.tab[tab].idReload);
		if(x){
			x.value=app.tab[tab].options.reload;
		}

		//	リンク
		app.tab[tab].links=null;
		var e_links=domChat.documentElement.selectNodes("terra:link");
		var a_links=[];
		for(var i=0;i<e_links.length;i++){
			var e_link=e_links.item(i);
			var h_link={
				"title":e_link.getAttribute("title"),
				"href":e_link.getAttribute("href")
			};
			a_links.push(h_link);
		}
		switch(module){
		case "atom":
			e_links=domChat.documentElement.selectNodes("link");
			for(var i=0;i<e_links.length;i++){
				var e_link=e_links.item(i);
				var h_link={
					"title":e_link.getAttribute("title"),
					"href":e_link.getAttribute("href")
				};
				a_links.push(h_link);
			}
			break;
		default:
			break;
		}
		app.tab[tab].links=a_links;

		//	更新確認
		var	notify=false,redraw=true;
		var	updated = new Date(req.getResponseHeader("Last-Modified"));
		switch(module){
		case "rss":
			var u = date_to_date(getElementText(domChat.documentElement.selectSingleNode("channel/dc:date")));
			if(u) updated = u;
			break;
		case "atom":
		case "cast":
			var u=date_to_date(getElementText(domChat.documentElement.selectSingleNode("updated")));
			if(u) updated = u;
			break;
		}

		var	serial	= 0;
		var	keywords = document.getElementById('idNotifyKeyword').value.split(/\s+/);
		if(keywords.length == 0) keywords = null;
		var notifyKeyword = false;
		serial=atoi(getElementText(domChat.documentElement.selectSingleNode("terra:serial")));
		var previousModified = app.tab[tab].lastModified;

		if(app.tab[tab].lastModified){
			if(app.tab[tab].lastModified<updated){
				notify=true;
				app.tab[tab].lastModified = updated;
			}else if(app.tab[tab].lastModified>updated){
				redraw=false;
			}
		}else{
			app.tab[tab].lastModified=updated;
		}
		if(app.tab[tab].serial){
			if(app.tab[tab].serial<serial){
				notify=true;
				app.tab[tab].serial=serial;
			}else{
				redraw=false;
			}
		}else{
			app.tab[tab].serial=serial;
		}

		//	メンバー一覧
		var rwm=0,rom=0,memlist=[];
		switch(module){
		case "cast":
			var em=domChat.documentElement.selectSingleNode("entry/members");
			if(em){
				rom=atoi(em.getAttribute("count"));
				var members=em.selectNodes("member");
				for(var i=0;i<members.length;i++){
					var member=members.item(i);
					var hash={};
					let_string_if(hash,"updated",getElementText(member.selectSingleNode("updated")));
					let_string_if(hash,"id"	,getElementText(member.selectSingleNode("id")));
					hash["name"]=getElementText(member.selectSingleNode("name"));
					let_string_if(hash,"color"	,getElementText(member.selectSingleNode("color")));
					let_string_if(hash,"uri"	,getElementText(member.selectSingleNode("uri")));
					let_string_if(hash,"email"	,getElementText(member.selectSingleNode("email")));
					var ic = member.selectSingleNode("icon");
					if(ic && icon_enable){
						let_string_if(hash,"icon"	,ic.getAttribute("src"));
						if(app.iconcache.length){
							hash["icon"] = app.iconcache+"?height=16&uri="+encodeURIComponent(hash["icon"])
						}
					}
					if(hash["name"]){
						rwm++,rom--;
						var u=date_to_date(hash["updated"]);
						memlist.push("<span style="+escapeAttribute("color: "+hash["color"])+" title="
								+escapeAttribute((u?(now-parseInt(u.valueOf()/1000))+"秒":"")
								+(hash["uri"]?"\nHome: "+hash["uri"]:"")+(hash["email"]?"\nE-mail: "+hash["email"]:""))+">"
								+(hash["icon"]?"<img src="+escapeAttribute(hash["icon"])+" height=\"16\" />":"")
								+encodeEntity(hash["name"]+((typeof hash["status"]=="string")?"("+hash["status"]+")":""))+"</span>☆");
					}
				}
			}
		}
		document.getElementById("chatMember."+tab).innerHTML	= 	"[<a href=\"#\" onclick=\"wrapper_reload();\">"+format_time(new Date)+"</a>] "
			+(rom+rwm? (rom?"ROM("+rom+") ":"")+"参加者("+rwm+") "+memlist.join(" ") : "最終更新："+format_date(app.tab[tab].lastModified) );

		if(!app.tab[tab].cached || redraw){
			var a=[];
			switch(module){
			case "cast":
				var el=domChat.documentElement.selectSingleNode("entry/log");
				if(el){
					var articles=el.selectNodes("article");
					var new_messages = document.createDocumentFragment();
					for(var i=0;i<articles.length;i++){
						var article=articles.item(i);
						var l={};
						l.updated	= date_to_date(getElementText(article.selectSingleNode("updated")));
						l["body"]	= getElementContents(article.selectSingleNode("body"), app.tab[tab].o_options.purl);
						l["bcolo"]=getElementText(article.selectSingleNode("bcolo")) || getElementText(article.selectSingleNode("color"));
						var author = article.selectSingleNode("author");
						if(author){
							let_string_if(l,"art_id"	,getElementText(article.selectSingleNode("id")));
						}else{
							author=article;
						}
						let_string_if(l,"id"	,getElementText(author.selectSingleNode("id")));
						l["name"]	= getElementText(author.selectSingleNode("name"));
						let_string_if(l,"color"	,getElementText(author.selectSingleNode("color")));
						let_string_if(l,"uri"	,getElementText(author.selectSingleNode("uri")));
						let_string_if(l,"email"	,getElementText(author.selectSingleNode("email")));

						l["text"]="";
						let_string_if(l,"text"	,getElementText(article.selectSingleNode("terra:text")));
						if(author.selectSingleNode("level")){
							l["text"]+="Lv "+getElementText(author.selectSingleNode("level"))+", Exp "+getElementText(author.selectSingleNode("exp"));
						}

						if(icon_enable){
							var ic = author.selectSingleNode("icon");
							if(ic){
								l.icon			= ic.getAttribute("src");
								l.icon_width	= atoi(ic.getAttribute("width"));
								l.icon_height	= atoi(ic.getAttribute("height"));
							}
						}
						var del = article.selectSingleNode("delete");
						if(del){
							l["delete"] = del.getAttribute("href");
							if(!l["delete"]) l["delete"] = '';
						}
						a.push(l);
						if (previousModified && previousModified < l.updated) {
							if (!notifyKeyword){
								for ( var idx = 0; keywords.length > idx; idx++) {
									if (l['body'].match(keywords[idx]) ||
									l['name'].match(keywords[idx]) ||
									l['id'].match(keywords[idx])) {
										notifyKeyword = true;
										break;
									}
								}
							}
							if (app.selected != tab) {
								var p = document.createElement('p');
								new_messages.appendChild(p);
								p.appendChild(document.createTextNode(l.updated.strftime('%H:%M') + " <" + app.tab[tab].title + "> (" + l.name + ") " + l.body));
							}
						}
					}
					wrapper_append_global_log(new_messages);
				}
			}

			var loga=[];

			if(app.tab[tab].links){
				var s="";
				for(var i=0;i<app.tab[tab].links.length;i++){
					var l=app.tab[tab].links[i];
					s=s+("<a href="+escapeAttribute(l.href)+" title="+escapeAttribute("Link: "+l.href)+" onclick=\"return nav(this.href)\">"+encodeEntity(l.title)+"</a> | ");
				}
				document.getElementById("id_span_alternative_url"+tab).innerHTML = s;
			}

			switch(module){
			case "atom":
				var ee=domChat.documentElement.selectNodes("entry");
				for(var i=0;i<ee.length;i++){
					var entry=ee.item(i);
					var ec=entry.selectSingleNode("content");
					if(!ec || ec.getAttribute("src") && ec.getAttribute("src").length>0){
						ec=entry.selectSingleNode("summary");
					}
					var ed=date_to_date(getElementText(entry.selectSingleNode("modified")));
					if(!ed){
						ed=date_to_date(getElementText(entry.selectSingleNode("updated")));
					}
					loga.push("<dl><dt>"+encodeEntity(getElementText(entry.selectSingleNode("title")))
						+" <span class=\"date\">("+format_date(ed)+")</span></dt>"
						+"<dd>"+getElementContents(ec, "")+"</dd></dl>");
				}
				break;
			case "rss":
				if(domChat.documentElement.nodeName=="rss"){ // RSS 2.0
					var ee=domChat.documentElement.selectNodes("channel/item");
				}else{
					var ee=domChat.documentElement.selectNodes("item");
				}
				for(var i=0;i<ee.length;i++){
					var entry=ee.item(i);
					var ec=entry.selectSingleNode("content:encoded");
					if(!ec){
						ec=entry.selectSingleNode("description");
					}
					var ed=date_to_date(getElementText(entry.selectSingleNode("dc:date")));
					if(!ed){
						ed=new Date(getElementText(entry.selectSingleNode("pubDate")));
					}
					loga.push("<dl><dt>"+encodeEntity(getElementText(entry.selectSingleNode("title")))
						+" <span class=\"date\">("+format_date(ed)+")</span></dt>"
						+"<dd>"+getElementContents(ec, "")+"</dd></dl>");
				}
				break;
			case "simple":
			default:
				for(var i=0;i<a.length;i++){
					var hash = a[i];
					if(icon_enable && hash.icon){
						try{
							var iw=atoi(hash["icon_width"]);
							var ih=atoi(hash["icon_height"]);
							var ixy=1;
							if(iw&&ih){
								ixy=iw/ih;
							}else{
								iw=96,ih=96;
							}
							if(app.icon_height&&ih>app.icon_height){
								hash.icon_width		= app.icon_height*ixy;
								hash.icon_height	= app.icon_height;
							}else{
								hash.icon_width		= iw;
								hash.icon_height	= ih;
							}
							hash.icon_title = hash["icon"]+" ("+hash.icon_width+"x"+hash.icon_height+")";
							hash["iconsrc"]=hash["icon"];
							if(app.iconcache.length){
								hash["icon"] = app.iconcache+"?height="+hash.icon_height+"&uri="+encodeURIComponent(hash["icon"])
							}
						}catch(e){
							delete hash.icon;
						}
					}else{
						delete hash.icon;
					}
					loga.push("<div class=\"log\"><table cellpadding=\"0\" cellspacing=\"0\"><tr>"
						+(hash["icon"]?"<td><a style=\"border:none;\" href="+escapeAttribute(hash["iconsrc"])+" onclick=\"return false;\"><img src="+escapeAttribute(hash["icon"])+" title="+escapeAttribute(hash["icon_title"])+" width=\""+hash["icon_width"]+"\" height=\""+hash["icon_height"]+"\"/></a></td>":"")
						+"<td><span"+(hash["color"]?" style=\"color: "+hash["color"]+"\"":"")+">"+encodeEntity(hash["name"])
						+"</span> &gt; <span"+(hash["bcolo"]?" style=\"color: "+hash["bcolo"]+"\"":"")+">"+(hash["body"])+"</span>"
						+" <span class=\"date\"" + (!hash["delete"] && hash["delete"] != undefined ? 'style="color:red"' : "") + ">("+format_date(hash["updated"])
						+(hash["text"]?", "+hash["text"]:"")
						+(hash["email"]?"<a href="+escapeAttribute("mailto:"+hash["email"])+" title="+escapeAttribute("E-mail: "+hash["email"])+"><img src=\"lib/themes/email.png\" /></a>":"")
						+(hash["uri"]?"<a href="+escapeAttribute(hash["uri"])+" title="+escapeAttribute("Link: "+hash["uri"])+" onclick=\"return nav(this.href)\"><img src=\"lib/themes/home.png\" /></a>":"")
						+(hash["delete"]?"<a href=\"#\" title=\"削除\" onclick=\"return wrapper_delete_article('"+
encodeEntity(hash["delete"]).replace(/\'/g,'&#39;').replace(/\"/g,'&#34;')
+"',"+tab+")\"><img src=\"lib/themes/del.png\" /></a>":"")
						+")</span></td></tr></table></div>");
				}
			}
			document.getElementById("chatLog."+tab).innerHTML = loga.join("");
			app.tab[tab].cached = loga.length;
		}

		if(!isPost && notify){
			if(tab!=app.selected){
				document.getElementById("tabButton"+tab).className="updated";
			}
			if (notifyKeyword) {
				if(!app.active && document.getElementById("idEnableFlashWindow").checked){
					oAccHelper.FlashWindow();
				}
				if(document.getElementById("idEnableSound").checked){
					oAccHelper.playSound("sound.wav");
				}
			}
		}

	}else{
		if(req.status==200){
			if(domChat.parseError){
				document.getElementById("chatLog."+tab).innerHTML = "Parse Error: "+domChat.parseError.reason+"<hr />"+encodeEntity(req.responseText);
			}
		}else{
			if(req.status&&req.status<600){
				document.getElementById("chatLog."+tab).innerHTML = "<strong>HTTP "+req.status+": "+encodeEntity(req.statusText)+"</strong><hr />"+encodeEntity(req.responseText);
			}
		}
	}
	document.getElementById("tabButton"+tab).innerHTML = app.tab[tab].title;

}catch(e){
	msgbox("エラー："+e.message);
}

}


function getElementContents(e, purl0){
	var s="";
	switch(e.getAttribute("type")){
	case "text":
		return encodeEntity(getElementText(e));
		break;
	case "xhtml":
		switch(e.firstChild.nodeName){
		case "body":
		case "div":
		case "p":
		case "span":
			return HTML.parse(getInnerXML(e.firstChild), purl0);
		default:
			return HTML.parse(getInnerXML(e), purl0);
		}
	default:
		return HTML.parse(getElementText(e), purl0);
	}
}

function wrapper_delete_article(uri, tab){
	if(msgbox_yn("発言を削除しますか？\n\n"+uri)){
		Maple.Get(uri,null,function(){},null,false);
		app.tab[tab].cached=false;
		wrapper_reload_implicit(tab);
	}
	return false;
}


function wrapper_flip_option(){
	var	e=document.getElementById("chatFrameOption."+app.selected);
	if(e.style.display!="block"){
		e.style.display="block";
	}else{
		e.style.display="none";
	}
}

function trimnum2(n){
	return n>9?n:"0"+n;
}

function format_date(d){
	if(!d || !d.getFullYear()) return "";
	try{
		return trimnum2(d.getFullYear()%100)
			+"-"+trimnum2(1+d.getMonth())
			+"-"+trimnum2(d.getDate())
			+" "+trimnum2(d.getHours())
			+":"+trimnum2(d.getMinutes())
			+":"+trimnum2(d.getSeconds())
			;
	}catch(e){
		return "#DateError("+typeof(d)+")";
	}
}

function format_time(d){
	try{
		return trimnum2(d.getHours())+":"+trimnum2(d.getMinutes())+":"+trimnum2(d.getSeconds());
	}catch(e){
		return "#DateError";
	}
}


function atoi(s){
	return (i=parseInt((""+s).replace(/^0+/,"")))?i:0;
}

function get_hash(s){
	return hex_sha1(s);
}


function add_feed(button,uri){
	var	system_name_table={
		"http://wahah.jp/2005/Terra":"Terra.xml",
		"http://airemix.com/Marldia":"Marldia.xml",
		"http://fuuka.org/WindChat":"WindChat.xml"
	};

	var a = uri.match(/^(https?\:\/\/[^\?]+)($|\?.*$)/);
	if(!a){
		msgbox("URLの形式が正しくないか、または認識できません。\n\n"+uri);
		return;
	}

	button.disabled=true;
	Maple.Get(uri,null,function(req,param){
		button.disabled=false;
		if(req.status!=200){
			msgbox("この URL からは読み取れませんでした。\n\n"+uri+"\n\nHTTP "+req.status+" "+req.statusText);
			return;
		}
		if(!req.responseXML || !req.responseXML.documentElement){
			msgbox("正しい XML 形式の文書ではありません。\n\n"+uri+"\n\n"+req.getResponseHeader("Content-Type"));
			return;
		}
		var rn=req.responseXML.documentElement.getAttribute("xmlns");
		if(!rn) rn = "::"+req.responseXML.documentElement.nodeName;
		switch(rn){
		case "http://airemix.org/2005/ChatXML":	// ChatXML WD2
		case "http://airemix.org/2005/Cast":	// Cast WD3+
			var root	= req.responseXML.documentElement;
			var	system_name	= getElementText(root.selectSingleNode("system/uri"));
			var system	= system_name_table[system_name];
			if(!system){
				system="Cast_Unknown.xml";
			}
			var site_name	= getElementText(root.selectSingleNode("site/name"));
			var title		= getElementText(root.selectSingleNode("entry/title")) || site_name;
			var org_link	= root.selectSingleNode("entry/link");
			//var hash={"type":"cast","acc:system":system,"text":title,"xmlUrl":a[1]};
			var hash={"type":"cast","acc:system":system,"text":title,"xmlUrl":uri};
			if(org_link){
				hash["htmlUrl"]=org_link.getAttribute("href");
			}
			app.outline.push(hash);
			saveOutline();
			select_chat(add_tab(hash));
			break;

		case "http://www.w3.org/2005/Atom":	//	Atom 1.0
		case "http://purl.org/atom/ns#":	//	Atom 0.3
			var root	= req.responseXML.documentElement;
			var title	= getElementText(root.selectSingleNode("title"));
			var org_link	= root.selectSingleNode("link");
			var hash={"type":"rss","text":title,"xmlUrl":uri};
			if(org_link){
				hash["htmlUrl"]=org_link.getAttribute("href");
			}
			app.outline.push(hash);
			saveOutline();
			select_chat(add_tab(hash));
			break;

		case "http://purl.org/rss/1.0/":	// RSS 1.0
		case "::rss":						// RSS0.91/RSS 2.0
			var root	= req.responseXML.documentElement;
			var title	= getElementText(root.selectSingleNode("channel/title"));
			var org_link	= root.selectSingleNode("channel/link");
			var hash={"type":"rss","text":title,"xmlUrl":uri};
			if(org_link){
				hash["htmlUrl"]=getElementText(org_link);
			}
			app.outline.push(hash);
			saveOutline();
			select_chat(add_tab(hash));
			break;

		default:
			msgbox("認識できない形式です。");
		}
	},null,false);
}


function add_tab(e){
	var tab=++app.addedTab;
	app.tab[tab] = {
		"created":false,
		"opened":false,
		"discardable":true,
		"options":{},
		"startup":(e["acc:startup"]=="true"),
		"title":""+e["text"],
		"baseUri":""+e["xmlUrl"],
		"orgUri":""+e["htmlUrl"],
		"siteName":"",
		"pathSetting":"./lib/templates/"+(e["acc:system"] || "Atom.xml"),
		"domSetting":new ActiveXObject("Microsoft.XMLDOM"),
		"nodeProfile":null,
		"timer":null,
		"implicit_reload_uri":"",
		"lastModified":null,
		"serial":null,
		"idBody":null,
		"idIcon":null,
		"index":tab
	};

	if(!app.tab[tab].domSetting.load(app.tab[tab].pathSetting)){
		msgbox(app.tab[tab].title+"\n\n設定ファイルの読み込みエラー\n\n"+app.tab[tab].domSetting.parseError.reason);
	}

	document.getElementById("barTab").innerHTML +=
		"<a id=\"tabButton"+tab+"\" class=\"disabled\" href=\"#\" title="+escapeAttribute(app.tab[tab].title+"\n"+app.tab[tab].orgUri)+(tab>0 && tab<10 ? " accesskey=\""+tab+"\"" : "")
		+" onclick=\"select_chat("+tab+"); this.blur(); return false;\" ondblclick=\"select_chat("+tab+");wrapper_reload();return false;\" oncontextmenu=\"on_context(this,event,"+tab+"); return false;\">"
		+encodeEntity(app.tab[tab].title)+"</a>";
	document.getElementById("painPool").innerHTML += "<div id=\"tabContents"+tab+"\" class=\"inactive\"></div>";
	return tab;
}

function let_string_if(obj,hash,value){
	if(typeof value=="string" && value.length){
		return obj[hash]=value;
	}
	return null;
}


//	WShell Commands
function nav(uri){
	var match;
	if(match=uri.match(/^about\:(\w*)/i)){
		select_chat(99);
		return false;
	}
	if(match=uri.match(/^javascript\:(.*)$/i)){
		if(msgbox_yn("危険な可能性のある以下のスクリプトを実行しますか？\n\n"+match[1])){
			eval(match[1]);
		}
		return false;
	}
	if(match=uri.match(/^(\w+\:\/\/)([^\/]+\.\w+)(\/|$)/)){
		var hostname=match[2];
		var a=(""+hostname).split(".");
		for(var i=0;i<a.length;i++){
			if(a[i].match(/[^A-Za-z0-9\-]/)){
				a[i]="xn--"+Punycode.encode(a[i]);
			}
		}
		uri=uri.replace(hostname,a.join("."));
	}

	//	purl
	uri = document.getElementById("idPurlPath").value + uri;

	try{
		if(document.getElementById("idUseUserBrowser").checked){
			var browser = document.getElementById("idUserBrowserPath").value;
			app.wsh.run(browser+' ' + uri);
		}else{
			app.wsh.run(uri);
		}
	}catch(e){
		msgbox("WShell呼び出しのエラー\n\n"+e.message);
	}
	return false;
}

function reg_startup(){
	try{
		var sh=app.wsh.CreateShortcut(app.wsh.SpecialFolders("Startup") + "\\AjaxChatClient.lnk");
		sh.workingDirectory = app.wsh.currentDirectory;
		sh.targetPath	= location.href;
		sh.iconLocation	= app.wsh.currentDirectory+"\\lib\\themes\\app.ico";
		sh.description	= "AjaxChatClient を起動します。";
		sh.save();
//		app.wsh.RegWrite("HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\AjaxChatClient",location.href,"REG_SZ");
		msgbox("スタートアップに登録しました。");
	}catch(e){
		msgbox("WShell呼び出しのエラー\n\n"+e.message);
	}
}

function foreach( c, functor ){
	if( c instanceof Array ){
		for( var i in c ){
			functor( c[i] );
		}
	}else{
		var e = new Enumerator( c );
		for( e.moveFirst(); !e.atEnd(); e.moveNext() ){
			functor( e.item() );
		}
	}
}

function msgbox(s){
	wrapper_append_global_log_string(s);
	return showModalDialog
		("./lib/dlgMessageBox.html",{"type":"message", "title":app.name, "message":s}
		,"status:false;dialogWidth:480px;dialogHeight:160px");
}

function msgbox_yn(s){
	return showModalDialog("./lib/dlgMessageBox.html",{"type":"confirm", "title":app.name, "message":s},"status:false;dialogWidth:480px;dialogHeight:160px");
}

function wrapper_request_ajax_timeout(tab){
	if(wrapper_request_ajax_abort) return;
	var p = document.createElement('p');
	p.appendChild(document.createTextNode(
		(new Date).strftime('%H:%M') + " <" + app.tab[tab].title + "> request timeout."));
	wrapper_append_global_log(p);
}

function wrapper_append_global_log_string(s){
	var new_messages = document.createDocumentFragment();
	var p=new_messages.appendChild(document.createElement("p"));
	p.appendChild(document.createTextNode(s));
	wrapper_append_global_log(new_messages);
}

function wrapper_append_global_log(frag){
	var gl = document.getElementById("globalLog");
	if(gl.hasChildNodes()) gl.insertBefore(frag, gl.firstChild);
	else gl.appendChild(frag);
	while (gl.childNodes.length > 200) {
		gl.removeChild(gl.lastChild);
	}
}


Date.prototype.strftime = function(format){
	var date = this;
	return format.replace(/%([\w%])/g, function(a,b){
		switch(b){
		case '%': return '%';
		case 'Y': return date.getFullYear();
		case 'y': return date.getYear();
		case 'm': return date.getMonth() < 9 ? '0' + (date.getMonth()+1) : date.getMonth() + 1;
		case 'd': return date.getDate() < 10 ? '0' + date.getDate() : date.getDate();
		case 'H': return date.getHours() < 10 ? '0' + date.getHours() : date.getHours();
		case 'M': return date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();
		case 'S': return date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds();
		default: return b;
		}
	});
};



/*
	MEMO: Well-known uri

	"http://wahah.jp/2005/Terra/":"Terra.xml",
	"http://airemix.com/Marldia/1.41":"Marldia.xml",
	"http://fuuka.org/WindChat/0.2.8":"WindChat.xml"

	"http://airemix.org/2005/ChatXML":	// ChatXML WD2
	"http://airemix.org/2005/Cast":		// Cast WD3+
	"http://www.w3.org/2005/Atom":		// Atom 1.0
	"http://purl.org/atom/ns#":			// Atom 0.3
	"http://purl.org/rss/1.0/":			// RSS 1.0
										// RSS 0.91/2.0 has no xmlns

	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:itunes="http://www.itunes.com/DTDs/Podcast-1.0.dtd"
	xmlns:terra="http://wahah.jp/Terra/CastExtention"

*/

</script>
<HTA:APPLICATION
	id="oHTA"
	applicationName="acc_revolution"
	border="thick"
	borderStyle="normal"
	caption="yes"
	contextmenu="yes"
	icon="lib/themes/app.ico"
	innerBorder="no"
	maximizeButton="no"
	minimizeButton="yes"
	scroll="yes"
	scrollFlat="yes"
	selection="yes"
	singleInstance="no"
	sysMenu="yes"
	version="1.04"
	windowState="normal"
	/>
</head><body onkeydown="hook_keys(event)"><div class="layout">
	<object id="oAccHelper" width="0" height="0" classid="clsid:d172c6e0-cb85-11da-a94d-0800200c9a66"></object>

	<div id="barTabContainer" oncontextmenu="return false;">
		<span id="barTab"></span>
	</div>
	<div id="painPoolContainer">

		<div id="tabContents99" oncontextmenu="return false;">

			<fieldset>
				<legend>フィードの読み込み</legend>
				<form id="id_add_feed_form" onsubmit="add_feed(this,document.getElementById('id_add_feed_url').value); return false;">
					<label for="id_add_feed_url">URL: <input type="text" class="i_text" id="id_add_feed_url" onfocus="this.select()" /></label>
					<input type="submit" class="button" value="GO" />
				</form>
			</fieldset>

			<div id="id_config_html_here" /></div>
			<hr />
			<address>Copyright &copy; 2005,2006,2007 <a href="http://wahah.jp/" onclick="return nav(this.href)">Nerry Kitazato</a>, ALL RIGHTS RESERVED.</address>
		</div>
		<div id="painPool"></div>
	</div>

	<div id="globalLog"></div>

	<div style="display:none;">
		<div id="srcMenuTab">
			<div class="PopupMenu">
				<a class="menu" href="#" onclick="window.parent.select_chat(document.tab)"><strong>このタブに移動</strong></a>
				<div class="hr"></div>
				<a class="menu" href="#" onclick="window.parent.delete_tab(document.tab);">削除</a>
				<div class="hr"></div>
				<a class="menu" href="#" onclick="window.parent.close_tab(document.tab);">閉じる</a>
			</div>
		</div>
	</div>

</div></body></html>

